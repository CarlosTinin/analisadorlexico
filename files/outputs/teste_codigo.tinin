0 VAR var
0 IDENTIFIER nelson
0 ASSINGMENT =
0 NUMBER 123
0 SEMICOLON ;
0 LINE_COMMENT // xablau
1 VAR var
1 IDENTIFIER jhonson
1 ASSINGMENT =
1 NUMBER 10.3
1 SEMICOLON ;
1 BLOCK_COMMENT /*block comment*/
2 VAR var
2 IDENTIFIER arr
2 OPEN_BRACKETS [
2 NUMBER 10
2 CLOSE_BRACKETS ]
2 ASSINGMENT =
2 OPEN_BRACKETS [
2 CLOSE_BRACKETS ]
2 SEMICOLON ;
3 VAR var
3 IDENTIFIER sum
3 ASSINGMENT =
3 IDENTIFIER nelson
3 ARITHMETIC_ADDER +
3 IDENTIFIER jhonson
3 SEMICOLON ;
4 VAR var
4 IDENTIFIER sub
4 ASSINGMENT =
4 IDENTIFIER nelson
4 IDENTIFIER jhonson
4 SEMICOLON ;
5 VAR var
5 IDENTIFIER sub_2
5 ASSINGMENT =
5 IDENTIFIER nelson
5 NUMBER 10
5 SEMICOLON ;
6 ARITHMETIC_INCREMENT ++
6 IDENTIFIER sub
6 SEMICOLON ;
7 IDENTIFIER sub
7 SEMICOLON ;
8 VAR var
8 IDENTIFIER div
8 ASSINGMENT =
8 IDENTIFIER nelson
8 ARITHMETIC_DIVISOR /
8 IDENTIFIER jhonson
8 SEMICOLON ;
9 VAR var
9 IDENTIFIER mult
9 ASSINGMENT =
9 IDENTIFIER jhonson
9 ARITHMETIC_MULT *
9 IDENTIFIER nelson
9 SEMICOLON ;
15 BLOCK_COMMENT /*

	This piece of code should print xablau!

*/
17 FUNCTION function
17 IDENTIFIER chesquedele
17 OPEN_PARENTHESES (
17 INT int
17 IDENTIFIER nelson
17 COMMA ,
17 INT int
17 IDENTIFIER jhonson
17 CLOSE_PARENTHESES )
17 OPEN_CURLY_BRACES {
18 IF if
18 OPEN_PARENTHESES (
18 IDENTIFIER nelson
18 GREATER_EQUAL_THAN >=
18 IDENTIFIER jhonson
18 CLOSE_PARENTHESES )
18 OPEN_CURLY_BRACES {
19 PRINT print
19 OPEN_PARENTHESES (
19 STRING "xaaaa aaaa aaa aablau!"
19 CLOSE_PARENTHESES )
19 SEMICOLON ;
19 LINE_COMMENT // This should print xablau
20 CLOSE_CURLY_BRACES }
21 CLOSE_CURLY_BRACES }
23 WHILE while
23 NUMBER 1
23 OR ||
23 NUMBER 1
23 OPEN_CURLY_BRACES {
24 IDENTIFIER chesquedele
24 OPEN_PARENTHESES (
24 IDENTIFIER nelson
24 COMMA ,
24 IDENTIFIER jhonson
24 CLOSE_PARENTHESES )
24 SEMICOLON ;
25 CLOSE_CURLY_BRACES }

4 INVALID_CHARACTER -
5 INVALID_CHARACTER -
7 INVALID_CHARACTER -
7 INVALID_CHARACTER -
