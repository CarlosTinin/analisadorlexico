1 VAR var
1 IDENTIFIER nelson
1 ASSINGMENT =
1 NUMBER 123
1 SEMICOLON ;
1 LINE_COMMENT // xablau
2 VAR var
2 IDENTIFIER jhonson
2 ASSINGMENT =
2 NUMBER 10.3
2 SEMICOLON ;
2 BLOCK_COMMENT /*block comment*/
3 VAR var
3 IDENTIFIER arr
3 OPEN_BRACKETS [
3 NUMBER 10
3 CLOSE_BRACKETS ]
3 ASSINGMENT =
3 OPEN_BRACKETS [
3 CLOSE_BRACKETS ]
3 SEMICOLON ;
4 VAR var
4 IDENTIFIER sum
4 ASSINGMENT =
4 IDENTIFIER nelson
4 ARITHMETIC_ADDER +
4 IDENTIFIER jhonson
4 SEMICOLON ;
5 VAR var
5 IDENTIFIER sub
5 ASSINGMENT =
5 IDENTIFIER nelson
5 IDENTIFIER jhonson
5 SEMICOLON ;
6 VAR var
6 IDENTIFIER sub_2
6 ASSINGMENT =
6 IDENTIFIER nelson
6 NUMBER 10
6 SEMICOLON ;
7 ARITHMETIC_INCREMENT ++
7 IDENTIFIER sub
7 SEMICOLON ;
8 IDENTIFIER sub
8 SEMICOLON ;
9 VAR var
9 IDENTIFIER div
9 ASSINGMENT =
9 IDENTIFIER nelson
9 ARITHMETIC_DIVISOR /
9 IDENTIFIER jhonson
9 SEMICOLON ;
10 VAR var
10 IDENTIFIER mult
10 ASSINGMENT =
10 IDENTIFIER jhonson
10 ARITHMETIC_MULT *
10 IDENTIFIER nelson
10 SEMICOLON ;
16 BLOCK_COMMENT /*

	This piece of code should print xablau!

*/
18 FUNCTION function
18 IDENTIFIER chesquedele
18 OPEN_PARENTHESES (
18 INT int
18 IDENTIFIER nelson
18 COMMA ,
18 INT int
18 IDENTIFIER jhonson
18 CLOSE_PARENTHESES )
18 OPEN_CURLY_BRACES {
19 IF if
19 OPEN_PARENTHESES (
19 IDENTIFIER nelson
19 GREATER_EQUAL_THAN >=
19 IDENTIFIER jhonson
19 CLOSE_PARENTHESES )
19 OPEN_CURLY_BRACES {
20 PRINT print
20 OPEN_PARENTHESES (
20 STRING "xaaaa aaaa aaa aablau!"
20 CLOSE_PARENTHESES )
20 SEMICOLON ;
20 LINE_COMMENT // This should print xablau
21 CLOSE_CURLY_BRACES }
22 CLOSE_CURLY_BRACES }
24 WHILE while
24 NUMBER 1
24 OR ||
24 NUMBER 1
24 OPEN_CURLY_BRACES {
25 IDENTIFIER chesquedele
25 OPEN_PARENTHESES (
25 IDENTIFIER nelson
25 COMMA ,
25 IDENTIFIER jhonson
25 CLOSE_PARENTHESES )
25 SEMICOLON ;
26 CLOSE_CURLY_BRACES }

5 INVALID_CHARACTER -
6 INVALID_CHARACTER -
8 INVALID_CHARACTER -
8 INVALID_CHARACTER -
